# Custom bash helper functions
function abspath() {
    if [ -f $1 ]; then
        dir=$(dirname $1)
        file=${1/$dir/}
    elif [ -d $1 ]; then
        dir=$1
        file=""
    else
        echo "USAGE: abspath PATH" >&2
        return 1
    fi

    echo $(cd $dir; pwd)$file
}

function cds() {
    _cds 0 $@
}

function _cds() {
    local start=$(pwd)
    local depth=$1
    local sigint=0
    shift

    function _return() {
        sigint=1
        xdotool key Return
    }
    trap _return SIGINT

    tput clear

    if ! pwd | grep "^`cd ~/src; pwd`" &>/dev/null; then
        cd $HOME/src
    fi

    while (( "$#" )); do
        if [[ "$1" == "-" ]]; then
            while ! test -d '.git'; do
                cd .. &> /dev/null
                if [[ `pwd` == '/' ]]; then
                    echo "No project root found."
                    return 1
                fi
            done
        elif [[ "$1" == "+" ]]; then
            return 0
        elif [[ "$1" == "$HOME" ]]; then
            cd ~/src
        elif [[ "$1" == "~" ]]; then
            cd ~/src
        else
            if ! cd "$1" 2> /dev/null; then
                cd *$1*
            fi
        fi

        if [ $? != 0 ]; then
            echo "$(pwd)/*$1* Not Found"
            echo ""
            if [ $depth == 0 ]; then
                cd "$start"
                return 2
            fi
        fi

        shift
    done

    tput sc
    tput smso; for i in $(seq 1 `tput cols`); do echo -n ' '; done; tput sgr0
    tput rc
    tput smso; pwd; tput sgr0
    ls -la --group-directories-first

    echo -n 'cds # '
    read nextdir

    if [[ $sigint == 1 ]]; then
        return 1
    fi
    if [[ $nextdir == "" ]]; then
        return 0
    fi
    echo ""
    if ! _cds `expr $depth + 1` $nextdir; then
        cd $start
        return 1
    fi
    trap - SIGINT
    export OLDPWD=$start
}

# credit: http://nparikh.org/notes/zshrc.txt
# Usage: extract <file>
# Description: extracts archived files / mounts disk images
# Note: .dmg/hdiutil is Mac OS X-specific.
extract () {
    if [ -f $1 ]; then
        case $1 in
            *.tar.bz2)  tar -jxvf $1                        ;;
            *.tar.gz)   tar -zxvf $1                        ;;
            *.bz2)      bunzip2 $1                          ;;
            *.dmg)      hdiutil mount $1                    ;;
            *.gz)       gunzip $1                           ;;
            *.tar)      tar -xvf $1                         ;;
            *.tbz2)     tar -jxvf $1                        ;;
            *.tgz)      tar -zxvf $1                        ;;
            *.zip)      unzip $1                            ;;
            *.ZIP)      unzip $1                            ;;
            *.pax)      cat $1 | pax -r                     ;;
            *.pax.Z)    uncompress $1 --stdout | pax -r     ;;
            *.Z)        uncompress $1                       ;;
            *)          echo "'$1' cannot be extracted/mounted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}
